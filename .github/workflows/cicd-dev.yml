name: cicd-dev

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  cicd-dev:
    runs-on: ubuntu-latest
    environment: dev

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4

      - name: Install dependencies
        run: npm install

      - name: Build the project
        run: npm run build

      - name: Run tests
        env:
          NODE_ENV: ${{ github.env }}
          API_URL: ${{ secrets.API_URL }}
        run: npm test

      - name: Copy files to dist
        run: |
          cp package.json dist/
          cp package-lock.json dist/

      - name: Create environment file
        run: |
          echo "NODE_ENV=${{ github.env }}" > dist/.env
          echo "EXPRESS_PORT=${{ secrets.API_URL }}" >> dist/.env

      - name: Create tarball
        run: |
          tar -czvf dist.tar.gz -C dist .

      - name: Setup SSH
        run: |
          mkdir -p ~/.ssh/
          echo "${{ secrets.SSH_PRIVATE_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.EC2_IP }} >> ~/.ssh/known_hosts

      - name: Deploy to EC2
        run: |
          scp -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ./dist.tar.gz ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }}:/home/ec2-user/
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no ${{ secrets.EC2_USER }}@${{ secrets.EC2_IP }} << 'EOF'
            cd ~
            pm2 stop app
            rm -rf app
            mkdir app
            mv dist.tar.gz ./app
            cd app
            tar -xzvf dist.tar.gz
            npm install
            pm2 start serve --name app -- -s -l 80
          EOF
